@using Notabledle.NotableModel
@using Notabledle.NotableModel.GameDisplay;

@page "/counter"

<head>
<style>
        table, th, td {
            border: 1px solid black;
        }
</style>
</head>

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Guess count: @gameState.Count</p>

<form id="gemGuessForm" @onsubmit="GuessGem">
    <label for="gemGuessField">Gem:</label>

    <input
        type="text"
        id="gemGuessField"
        list="gemGuessOptions"
        name="Gem"
        autocomplete="on"
        placeholder="Input an active skill gem"
        require @bind="currentGuess">
    <datalist id="gemGuessOptions">
        @foreach (var item in NotableList.Value)
        {
            <option>@item.Name</option>
        }
    </datalist>

    <input type="submit" />
</form>

<table>
    <tr>
        <th>Guess #</th>
        <th>Name</th>
        <th>Attribute Requirement(s)</th>
    </tr>
    @foreach (var gameStateRow in gameState)
    {
        <tr>
            @foreach (var propertyCell in gameStateRow)
            {
                <td bgcolor="@propertyCell.Color">@propertyCell.GuessText</td>
            }
        </tr>
    }
</table>

@code {
    private string currentGuess = "";
    private List<List<PropertyCell>> gameState = new List<List<PropertyCell>>();
    NotableGame notableGame = new NotableGame();

    private void GuessGem()
    {
        gameState = notableGame.GuessNotable(currentGuess);
        currentGuess = ""; // Clear the input after making a guess
    }
}
